# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
  branches:
    include:
      - dev
      - main

pool:
  name: 'MySelfHostedpool'
  demands: []

steps:
  # Setup JDK 21 dynamically
  - powershell: |
      Invoke-WebRequest -Uri "https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.2%2B13/OpenJDK21U-jdk_x64_windows_hotspot_21.0.2_13.zip" -OutFile "$(Pipeline.Workspace)\jdk.zip"
      Expand-Archive "$(Pipeline.Workspace)\jdk.zip" -DestinationPath "$(Pipeline.Workspace)\jdk"
      echo "##vso[task.setvariable variable=JAVA_HOME]$(Pipeline.Workspace)\jdk\jdk-21.0.2+13"
      echo "##vso[task.prependpath]$(Pipeline.Workspace)\jdk\jdk-21.0.2+13\bin"
      java -version
    displayName: "Download & Setup JDK 21"

  # Prepare SonarCloud Analysis (CLI mode, before build)
  - task: SonarCloudPrepare@3
    inputs:
      SonarCloud: 'SonarCloudServiceConnection'   # <-- Service connection to your SonarQube/SonarCloud
      organization: 'devanshi-rangras'
      scannerMode: 'CLI'
      configMode: 'manual'
      cliProjectKey: 'Devanshi-Rangras_sample-job-portal'
      cliProjectName: 'JobPortal'
      cliSources: '.'
    displayName: "Prepare SonarCloud Analysis (CLI Pre-Build)"

  # Run SonarCloud Analysis
  - task: SonarCloudAnalyze@3
    displayName: "Run SonarCloud Analysis (Pre-Build)"

  # Publish SonarCloud Quality Gate
  - task: SonarCloudPublish@3
    inputs:
      pollingTimeoutSec: '300'
    displayName: "Publish SonarCloud Quality Gate (Pre-Build)"

  # Build & Test Backend with Maven
  - script: |
      cd backend
      mvn clean verify
    displayName: "Build & Test Backend (Maven)"

# Build & Test Frontend (npm)

# - script: |
#     cd frontend
#     npm install
#     npm run build
#     npm test
#   displayName: "Build & Test Frontend"
